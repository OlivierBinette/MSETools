% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dga.R
\name{dga}
\alias{dga}
\title{Fit decomposable graphical models}
\usage{
dga(data, priorCounts = NULL, graphs = NULL, Nmissing = NULL,
 logPriorGraphs = NULL, logPriorN = NULL, maxMissingMult = 30,
 length.out = 1000)
}
\arguments{
\item{data}{object of class "MSEdata" representing list inclusion pattern counts for between 3 and 5 lists.}

\item{priorCounts}{"Prior counts" for the hyper-Dirichlet prior on decomposable graphs. This can be a positive numeric value for constant counts or an L-dimensional array (where L is the number of lists) representing the table of prior counts (see examples below).}

\item{graphs}{List of decomposable graphs under consideration. Must be a sub-list of "graphs3", "graphs4" or "graphs5". Default is "graphsL" where L is the number of lists (between 3 and 5).}

\item{Nmissing}{integer vector for the number of plausible unobserved individuals. Population size posterior probability is computed for the values corresponding to these numbers of missing individuals. Defaults to a vector of length 1000 ranging between 1 and 30 times the number of observed individuals.}

\item{logPriorGraphs}{Numeric vector of log prior probabilities over the set of decomposable graphs in "graphs". Defaults to a constant prior.}

\item{logPriorN}{Numeric vector of log prior probabilities of the number of missing individuals in "Nmissing". Defaults to the population size prior $p(N) \propto 1/N$. Nmissing should be specified explicitely if logPriorN is provided.}

\item{maxMissingMult}{If Nmissing is NULL, then maxMissingMult determines the default range of Nmissing: between 1 and maxMissingMult times the number of observed individuals.}

\item{length.out}{If Nmissing is NULL, then length.out determines the maximum default length of Nmissing.}
}
\description{
Fit the decomposable graphical model approach of Madigan and York (1997), as implemented in the dga package of Kristian Lum, James Johndrow, and Patrick Ball (2015).
}
\examples{
dga_fit <- dga(UK)
estimates(dga_fit)
plot(dga_fit)

}
\seealso{
estimates MSEdata
}
